<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDCRXhpZgAATU0AKgAAAAgAAwE7AAIAAAANAAAAModpAAQAAAAB
        AAAAQJydAAEAAAAaAAAAoAAAAABDb3JlIGk1IDExVGgAAAAEkAMAAgAAABQAAAB2kAQAAgAAABQAAACK
        kpEAAgAAAAM4OAAAkpIAAgAAAAM4OAAAAAAAADIwMjU6MDk6MTAgMjI6MDU6MjkAMjAyNTowOToxMCAy
        MjowNToyOQAAAEMAbwByAGUAIABpADUAIAAxADEAVABoAAAA/9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJ
        CQoVDxAMERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjInKisq/9sAQwEHCAgKCQoUCwsU
        KhwYHCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq/8AAEQgA
        jgB1AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
        BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2
        Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEB
        AQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
        IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2Rl
        ZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
        1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+iKKKKACiisPxR4mh8OWKkJ9ovZz
        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
        66OHpUI8tKNgooorI3P/2Q==
</value>
  </data>
</root>